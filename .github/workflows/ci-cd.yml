name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test & Build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Create test environment file
      run: |
        echo "GOOGLE_API_KEY=test_key_for_ci" > .env
        echo 'UI_GENERATION_PROMPT=Test prompt for CI/CD' >> .env
    
    - name: Build Docker images
      run: |
        echo "🔨 Building backend..."
        docker-compose build backend
        echo "🔨 Building frontend..."
        docker-compose build frontend
        
    - name: Start services
      run: |
        echo "🚀 Starting services..."
        docker-compose up -d
        
    - name: Wait for services to be ready
      run: |
        echo "⏳ Waiting for backend to be ready..."
        timeout 60 bash -c 'until curl -f http://localhost:5001/health; do sleep 2; done'
        echo "✅ Backend is ready!"
        
    - name: Test health endpoints
      run: |
        echo "🔍 Testing health endpoint..."
        curl -f http://localhost:5001/health
        echo "🔍 Testing metrics endpoint..."
        curl -f http://localhost:5001/metrics
        echo "✅ All endpoints working!"
        
    - name: Test frontend
      run: |
        echo "🔍 Testing frontend..."
        curl -f http://localhost
        echo "✅ Frontend is serving correctly!"
        
    - name: Show logs on failure
      if: failure()
      run: |
        echo "❌ Tests failed! Here are the logs:"
        docker-compose logs backend
        docker-compose logs frontend
        
    - name: Cleanup
      if: always()
      run: |
        echo "🧹 Cleaning up..."
        docker-compose down
        docker system prune -f

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Deploy to Production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy notification
      run: |
        echo "🚀 Ready to deploy to production!"
        echo "📦 Docker images built and tested successfully"
        echo "🔗 Add your deployment steps here (AWS, Render, etc.)"
        
    # Uncomment and customize for your deployment platform:
    #
    # - name: Deploy to Render
    #   run: |
    #     curl -X POST "https://api.render.com/deploy/your-service-id" \
    #       -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
    #
    # - name: Deploy to AWS
    #   uses: aws-actions/configure-aws-credentials@v2
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
